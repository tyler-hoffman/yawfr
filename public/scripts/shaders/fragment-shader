precision mediump float;

uniform vec2 a_coords;
varying vec2 v_texCoord;

vec2 e = vec2(2.7182818, 0.0);

vec2 multiply(vec2 a, vec2 b) {
  return vec2(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);
}

vec2 toPower(vec2 v, int power) {
  vec2 result = vec2(1.0, 0.0);
  for (int i = 0; i < 20; i++) {
    if (i == power) break;
    result = multiply(result, v);
  }
  return result;
}

void main() {
  int max = 50;
  int count = 0;
  vec2 z = v_texCoord;
  //vec2 c = vec2(-0.621, 0.0);
  //vec2 c = z;
  vec2 c = a_coords;

  for(int i = 0; i < 50; i++) {

    z = toPower(z, 2);
    z = multiply(
        vec2(exp(z.x), 0.0),
        vec2(cos(z.y), sin(z.y)));

    z += c;

    if (length(z) > 2.0) {
      count = i;
      break;
    }

  }
  gl_FragColor = vec4(float(count) / float(max), 0.0, 0.0, 1.0);
}
